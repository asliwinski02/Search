MAX, MIN = float('inf'), float('-inf')


def minimax(depth, node, ismaximizingPlayer, values, alpha, beta):
    if depth == 3:
        return values[node]

    if ismaximizingPlayer:
        best = MIN

        for i in range(2):
            bestVal = minimax(depth + 1, node * 2 + i, False, values, alpha, beta)
            best = max(best, bestVal)
            alpha = max(alpha, best)

            if beta <= alpha:
                break
        return best
    else:
        best = MAX
        for i in range(2):
            bestVal = minimax(depth + 1, node * 2 + i, True, values, alpha, beta)
            best = min(best, bestVal)
            beta = min(beta, best)

            if beta <= alpha:
                break
        return best


if __name__ == "__main__":

    values = [3, 5, 17, 8, -2, 5, -1, 7]
    print("The ending optimal value is ", minimax(0, 0, True, values, MIN, MAX))
