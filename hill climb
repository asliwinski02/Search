def hill_climbing(start, goal, heuristic_numbers):
    current = start
    path = [current]

    while current != goal:
        neighbors = graph[current]
        next_node = None
        min_heuristic = float('inf')

        for neighbor in neighbors:
            neighbor_heuristic = heuristic_numbers[neighbor]
            if neighbor_heuristic < min_heuristic:
                next_node = neighbor
                min_heuristic = neighbor_heuristic

        if next_node == current:
            break

        current = next_node
        path.append(current)

        if current != goal:
            print("Goal node cannot be reached.")
        else:
            print("The shortest path to the goal:", path)


start = 'A'
goal = 'M'

heuristic_numbers = {
    'A': 7, 'B': 5, 'C': 3, 'U': 4, 'E': 2, 'G': 3, 'I': 6, 'J': 4, 'K': 1, 'Y': 2, 'M': 0
}

graph = {
    'A': ['B', 'C', 'U'], 'B': ['E', 'G'], 'C': ['G', 'I', 'J'], 'U': ['K', 'Y'], 'E': ['G', 'M'], 'G': ['M'],
    'I': ['M'], 'J': ['K'], 'K': ['J'], 'Y': ['M'], 'M': []
}
hill_climbing(start, goal, heuristic_numbers)
print(hill_climbing)
